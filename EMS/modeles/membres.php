<?phprequire_once CHEMIN_LIB.'form.php';class membre {	private $id;	private $nom;	private $prenom;	private $nomMoto;	private $marqueMoto;	private $typeMoto;	private $roleAsso;	private $dateNaissance;	private $photo;	private $sexe;	private $typeMembre;	private $dateCreation;	private $dateMaj;	public function __construct($id)	{		$this->id = $id;	}	public function getId() {		return $this->id;	}		public function getNom() {		return $this->nom;	}		public function getPrenom() {		return $this->prenom;	}	public function load() {		$pdo = PDO2::getInstance();		$requete = $pdo->prepare("SELECT * FROM membres where id = :id_utilisateur");		$requete->bindValue(':id_utilisateur', $this->id);		$requete->execute();		if ($result = $requete->fetch(PDO::FETCH_ASSOC)) {			$requete->closeCursor();			$this->nom = $result['nom'];			$this->prenom = ($result['prenom']);			$this->nomMoto = ($result['nom_moto']);			$this->marqueMoto = ($result['marque_moto']);			$this->typeMoto = ($result['type_moto']);			$this->roleAsso = ($result['role_asso']);			$this->dateNaissance = ($result['date_naissance']);			$this->photo = ($result['photo']);			$this->sexe = ($result['sexe']);			$this->dateCreation = ($result['date_creation']);			$this->dateMaj = ($result['date_maj']);			$this->typeMembre = ($result['type_membre']);		}	}	public static function listing() {		$membres = array();		$pdo = PDO2::getInstance();		$requete = $pdo->prepare("SELECT * FROM membres");		$requete->execute();		while ($result = $requete->fetch(PDO::FETCH_ASSOC)) {			$membre = new membre($result['id']);			$membre->load();			$membres[] = $membre;		}		$requete->closeCursor();		return $membres;	}	/**	 * Retourne la liste des propri�t�s de l'objet sous forme de tableau	 * @return multitype:array	 */	public function getProperties() {		return get_object_vars($this);	}	/**	 * Crée le formulaire permettant l'édition d'un membre	 */	public function formulaireEdition() {		$form_membre = new Form('formulaire_modifier_membre');		$form_membre->method('POST');		$form_membre->add('Text', 'nom')		->label("Nom")		->value($this->nom);		$form_membre->add('Text', 'prenom')		->label("Prenom")		->value($this->prenom);		$form_membre->add('Text', 'sexe')		->label("Sexe")		->value($this->sexe);		$form_membre->add('Text', 'date_naissance')		->label("Date denaissance")		->value($this->dateNaissance);		$form_membre->add('Text', 'marque_moto')		->label("Marque de la moto")		->value($this->marqueMoto)->required(false);		$form_membre->add('Text', 'nom_moto')		->label("Nom de la moto")		->value($this->nomMoto)->required(false);		$form_membre->add('Text', 'type_moto')		->label("Type de la moto")		->value($this->typeMoto)->required(false);		$form_membre->add('Text', 'role_asso')		->label("Rôle")		->value($this->roleAsso);		$form_membre->add('Text', 'type_membre')		->label("Type de membre")		->value($this->typeMembre);		$form_membre->add('Submit', 'submit')		->value("Enregistrer");		// Pr�-remplissage avec les valeurs pr�c�demment entr�es (s'il y en a)		$form_membre->bound($_POST);		return $form_membre;	}	public function update($form) {		list($this->nom, $this->prenom, $this->sexe, $this->dateNaissance, $this->marqueMoto, $this->nomMoto, $this->typeMoto, $this->roleAsso, $this->typeMembre) =		$form->get_cleaned_data('nom', 'prenom', 'sexe', 'date_naissance', 'marque_moto', 'nom_moto', 'type_moto', 'role_asso', 'type_membre');		$this->save();	}	private function save() {		$pdo = PDO2::getInstance();		$requete = $pdo->prepare("UPDATE membres SET        nom = :nom,		prenom = :prenom,		nom_moto = :nom_moto,		marque_moto = :marque_moto,		type_moto = :type_moto,		date_naissance = :date_naissance,		sexe = :sexe,		role_asso = :role_asso,		type_membre = :type_membre		where id = :id");	    $requete->bindValue(':nom', $this->nom);	    $requete->bindValue(':prenom',    $this->prenom);	    $requete->bindValue(':nom_moto',    $this->nomMoto);	    $requete->bindValue(':marque_moto',    $this->marqueMoto);	    $requete->bindValue(':type_moto',    $this->typeMoto);	    $requete->bindValue(':date_naissance',    $this->dateNaissance);	    $requete->bindValue(':sexe',    $this->sexe);	    $requete->bindValue(':role_asso',    $this->roleAsso);	    $requete->bindValue(':type_membre',    $this->typeMembre);	    $requete->bindValue(':id',    $this->id);	    if ($requete->execute()) {	        return $pdo->lastInsertId();	    }	    //$requete->closeCursor();	    return $requete->errorInfo();	}}